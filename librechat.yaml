# LibreChat Configuration
# For more information, see the Configuration Guide:
# https://www.librechat.ai/docs/configuration/librechat_yaml

# Configuration version (required)
version: 1.2.1

# Cache settings: Set to true to enable caching
cache: true

# Custom interface configuration
interface:
  customWelcome: "Welcome to LibreChat! Your AI assistant with memory, code execution, and advanced capabilities."
  # MCP Servers UI configuration
  mcpServers:
    placeholder: 'MCP Servers'
  # Enable/disable file search as a chatarea selection (default: true)
  fileSearch: true
  # Privacy policy settings
  privacyPolicy:
    externalUrl: 'https://librechat.ai/privacy-policy'
    openNewTab: true
  # Terms of service
  termsOfService:
    externalUrl: 'https://librechat.ai/tos'
    openNewTab: true
    modalAcceptance: true
    modalTitle: "Terms of Service for LibreChat"
    modalContent: |
      # Terms and Conditions for LibreChat

      *Effective Date: February 18, 2024*

      Welcome to LibreChat, the informational website for the open-source AI chat platform, available at https://librechat.ai. These Terms of Service ("Terms") govern your use of our website and the services we offer. By accessing or using the Website, you agree to be bound by these Terms and our Privacy Policy, accessible at https://librechat.ai//privacy.

      ## 1. Ownership

      Upon purchasing a package from LibreChat, you are granted the right to download and use the code for accessing an admin panel for LibreChat. While you own the downloaded code, you are expressly prohibited from reselling, redistributing, or otherwise transferring the code to third parties without explicit permission from LibreChat.

      ## 2. User Data

      We collect personal data, such as your name, email address, and payment information, as described in our Privacy Policy. This information is collected to provide and improve our services, process transactions, and communicate with you.

      ## 3. Non-Personal Data Collection

      The Website uses cookies to enhance user experience, analyze site usage, and facilitate certain functionalities. By using the Website, you consent to the use of cookies in accordance with our Privacy Policy.

      ## 4. Use of the Website

      You agree to use the Website only for lawful purposes and in a manner that does not infringe the rights of, restrict, or inhibit anyone else's use and enjoyment of the Website. Prohibited behavior includes harassing or causing distress or inconvenience to any person, transmitting obscene or offensive content, or disrupting the normal flow of dialogue within the Website.

      ## 5. Governing Law

      These Terms shall be governed by and construed in accordance with the laws of the United States, without giving effect to any principles of conflicts of law.

      ## 6. Changes to the Terms

      We reserve the right to modify these Terms at any time. We will notify users of any changes by email. Your continued use of the Website after such changes have been notified will constitute your consent to such changes.

      ## 7. Contact Information

      If you have any questions about these Terms, please contact us at contact@librechat.ai.

      By using the Website, you acknowledge that you have read these Terms of Service and agree to be bound by them.

  endpointsMenu: true
  modelSelect: true
  parameters: true
  sidePanel: true
  presets: true
  prompts: true
  bookmarks: true
  multiConvo: true
  agents: true

# Registration settings - Multi-user enabled
registration:
  socialLogins: ['github', 'google', 'discord', 'openid', 'facebook', 'apple']

# Speech configuration
speech:
  tts:
    # ElevenLabs configuration
    elevenlabs:
      apiKey: '${ELEVENLABS_API_KEY}'
      model: 'eleven_multilingual_v2'
      voices: ['Rachel', 'Domi', 'Bella', 'Antoni', 'Elli', 'Josh', 'Arnold', 'Adam', 'Sam']
    # OpenAI TTS backup
    openai:
      apiKey: '${OPENAI_API_KEY}'
      model: 'tts-1'
      voices: ['alloy', 'echo', 'fable', 'onyx', 'nova', 'shimmer']
  stt:
    # OpenAI STT
    openai:
      apiKey: '${OPENAI_API_KEY}'
      model: 'whisper-1'

# Rate limiting configuration
rateLimits:
  fileUploads:
    ipMax: 100
    ipWindowInMinutes: 60
    userMax: 50
    userWindowInMinutes: 60
  conversationsImport:
    ipMax: 100
    ipWindowInMinutes: 60
    userMax: 50
    userWindowInMinutes: 60

# Actions configuration
actions:
  allowedDomains:
    - "swapi.dev"
    - "librechat.ai"
    - "google.com"
    - "github.com"
    - "stackoverflow.com"
    - "wikipedia.org"

# Memory configuration for user memories
memory:
  # Enable memory functionality
  disabled: false
  # Restrict memory keys to specific values
  validKeys: ["user_preferences", "conversation_context", "learned_facts", "personal_information", "work_context", "project_details"]
  # Maximum token limit for memory storage
  tokenLimit: 2000
  # Enable personalization features
  personalize: true
  # Number of recent messages to consider for memory
  messageWindowSize: 5
  # Memory agent configuration
  agent:
    provider: "openAI"
    model: "gpt-4.1-mini"  # Cost-effective model for memory processing
    instructions: |
      Store memory using only the specified validKeys. For user_preferences: save 
      explicitly stated preferences about communication style, topics of interest, 
      and interaction patterns. For conversation_context: maintain relevant context 
      from ongoing discussions. For learned_facts: store factual information the 
      user has shared. For personal_information: save appropriate personal details 
      the user has disclosed. For work_context: remember professional information 
      and projects. For project_details: track specific projects and their requirements.
      Always be selective and only store genuinely useful information.
    model_parameters:
      temperature: 0.1

# Definition of custom endpoints
endpoints:
  # Assistants endpoint configuration
  assistants:
    disableBuilder: false
    pollIntervalMs: 3000
    timeoutMs: 180000
    retrievalModels: ["gpt-4o", "gpt-4.1", "gpt-4.5"]
    capabilities: ["code_interpreter", "file_search", "actions", "tools", "image_vision"]

  # Agents endpoint configuration
  agents:
    recursionLimit: 50
    maxRecursionLimit: 100
    disableBuilder: false
    capabilities: ["execute_code", "file_search", "actions", "tools"]

  # Custom endpoints
  custom:
    # Groq - Fast inference
    - name: 'Groq'
      apiKey: '${GROQ_API_KEY}'
      baseURL: 'https://api.groq.com/openai/v1/'
      models:
        default: []  # Fetch all available models
        fetch: true
      titleConvo: true
      titleModel: 'llama-3.1-70b-versatile'
      modelDisplayLabel: 'Groq'
      iconURL: 'https://groq.com/wp-content/uploads/2024/03/PBG-mark1-color.svg'

    # Mistral AI
    - name: 'Mistral'
      apiKey: '${MISTRAL_API_KEY}'
      baseURL: 'https://api.mistral.ai/v1'
      models:
        default: []  # Fetch all available models
        fetch: true
      titleConvo: true
      titleModel: 'mistral-small-latest'
      modelDisplayLabel: 'Mistral'
      dropParams: ['stop', 'user', 'frequency_penalty', 'presence_penalty']
      iconURL: 'https://mistral.ai/images/logo_hubc88c4ece131b91c7cb753f40e9e1cc5_2589_256x0_resize_q90_h2_lanczos_3.webp'

    # OpenRouter - Access to many models
    - name: 'OpenRouter'
      apiKey: '${OPENROUTER_API_KEY}'
      baseURL: 'https://openrouter.ai/api/v1'
      models:
        default: []  # Fetch all available models dynamically
        fetch: true
      titleConvo: true
      titleModel: 'meta-llama/llama-3.1-70b-instruct'
      dropParams: ['stop']
      modelDisplayLabel: 'OpenRouter'
      iconURL: 'https://openrouter.ai/favicon-32x32.png'

    # HuggingFace Inference
    - name: 'HuggingFace'
      apiKey: '${HUGGINGFACE_API_KEY}'
      baseURL: 'https://api-inference.huggingface.co/v1'
      models:
        default: []  # Fetch all available models dynamically
        fetch: true
      titleConvo: true
      titleModel: 'meta-llama/Llama-3.1-70B-Instruct'
      modelDisplayLabel: 'HuggingFace'
      iconURL: 'https://huggingface.co/front/assets/huggingface_logo-noborder.svg'

    # Perplexity - Web search enabled models
    - name: 'Perplexity'
      apiKey: '${PERPLEXITY_API_KEY}'
      baseURL: 'https://api.perplexity.ai'
      models:
        default: ['llama-3.1-sonar-large-128k-online', 'llama-3.1-sonar-small-128k-online']
        fetch: false
      titleConvo: true
      titleModel: 'llama-3.1-sonar-small-128k-online'
      modelDisplayLabel: 'Perplexity'
      iconURL: 'https://www.perplexity.ai/favicon.svg'

# File configuration
fileConfig:
  endpoints:
    assistants:
      fileLimit: 10
      fileSizeLimit: 50  # MB
      totalSizeLimit: 200  # MB
      supportedMimeTypes:
        - "image/.*"
        - "application/pdf"
        - "text/.*"
        - "application/json"
        - "application/xml"
        - "application/yaml"
        - "application/x-yaml"
    agents:
      fileLimit: 10
      fileSizeLimit: 50  # MB
      totalSizeLimit: 200  # MB
      supportedMimeTypes:
        - "image/.*"
        - "application/pdf"
        - "text/.*"
        - "application/json"
        - "application/xml"
        - "application/yaml"
        - "application/x-yaml"
    openAI:
      fileLimit: 5
      fileSizeLimit: 25  # MB
      totalSizeLimit: 100  # MB
    default:
      fileLimit: 3
      fileSizeLimit: 10  # MB
      totalSizeLimit: 30  # MB
  serverFileSizeLimit: 100  # Global server file size limit in MB
  avatarSizeLimit: 2  # Limit for user avatar image size in MB
  imageGeneration:
    percentage: 100
    px: 1024
  # Client-side image resizing
  clientImageResize:
    enabled: true
    maxWidth: 1900
    maxHeight: 1900
    quality: 0.92

